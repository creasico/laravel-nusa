name: Merged
run-name: "dist(${{ github.event.workflow_run.head_branch }}): create distribution database"

on:
  workflow_run:
    branches: [main]
    types: [completed]
    workflows: [Tests]

jobs:
  configs:
    name: Configure
    uses: projek-xyz/actions/.github/workflows/configure.yml@main
    with:
      php-version: 8.2
      laravel-version: 10.x

  distribute:
    name: Create Distribution Database
    runs-on: ubuntu-latest
    needs: [configs]
    env:
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: ${{ github.repository_owner }}
      UPSTREAM_DB_DATABASE: nusantara

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Setup MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE $DB_DATABASE;" -u$DB_USERNAME -p$DB_PASSWORD
          mysql -e "CREATE DATABASE $UPSTREAM_DB_DATABASE;" -u$DB_USERNAME -p$DB_PASSWORD

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ needs.configs.outputs.composer-cache-dir }}
          key: ${{ needs.configs.outputs.composer-cache-key }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ needs.configs.outputs.composer-cache-key }}-composer-

      - name: Install dependencies
        run: |
          composer update --prefer-dist --no-interaction --no-progress
          sudo apt-get install -y sqlite3-tools

      - name: Import databases
        env:
          COLUMNS: 100
          GIT_BRANCH: ${{ needs.configs.outputs.target-branch }}
        run: |
          vendor/bin/testbench nusa:import --fresh --dist --ansi
          ls -lah database/*.sqlite

      - name: Stat summary
        id: stats
        env:
          COLUMNS: 120
          GIT_BRANCH: ${{ needs.configs.outputs.target-branch }}
        run: |
          vendor/bin/testbench nusa:stat --ansi
          ./.github/scripts/check-changes.sh

      - name: Commit distribution database
        if: steps.stats.outputs.has-changes == '1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_BRANCH: ${{ needs.configs.outputs.target-branch }}
        run: ./.github/scripts/commit-changes.sh

      - name: Create summary
        if: always()
        # env:
        #   COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        #   COMMIT_AUTHOR: ${{ github.event.head_commit.author.name }}
        #   DIST_CHANGED: ${{ steps.changes.outputs.dist-changed }}
        #   DEV_CHANGED: ${{ steps.changes.outputs.dev-changed }}
        run: ./.github/scripts/create-summary.sh
